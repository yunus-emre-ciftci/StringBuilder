package builder;

public class Test {
    /* StringBuilder, metinsel veriler Ã¼zerinde deÄŸiÅŸiklik yapmak iÃ§in kullanÄ±lan ve performansÄ± artÄ±ran bir araÃ§tÄ±r.
       Normal String sÄ±nÄ±fÄ±nÄ±n aksine, StringBuilder nesneleri Ã¼zerinde deÄŸiÅŸiklikler yapÄ±labilir ve yeni veriler eklemek,
       veri silmek, deÄŸiÅŸtirmek veya birleÅŸtirmek gibi iÅŸlemler yapmak kolaydÄ±r.
       StringBuilder sÄ±nÄ±fÄ±, metinsel veriler Ã¼zerinde yoÄŸun iÅŸlem yapÄ±lan durumlarda performansÄ± artÄ±rmak iÃ§in tercih edilir.
       Ã–zellikle bÃ¼yÃ¼k metinleri birleÅŸtirme veya metin Ã¼zerinde tekrarlayan deÄŸiÅŸiklikler yapma iÅŸlemlerinde avantajlÄ±dÄ±r.
       */
    private static final String fullName = "John Doe";

    public static void append() {
        StringBuilder stringBuilder = new StringBuilder();

        /*
         * append metodu, metinsel verileri StringBuilder nesnesine nesnesine eklemek iÃ§in kullanÄ±lÄ±r.
         * Bu yÃ¶ntem, mevcut StringBuilder nesnesinin sonuna bir veya daha fazla karakter dizisi ekler.
         *
         * */
        //String ekleme
        stringBuilder.append("Hello");
        //Char ekleme
        stringBuilder.append('A');
        //Integer ekleme
        stringBuilder.append(2312);
        //Double ekleme.
        stringBuilder.append(233.3);
        //boolean ekleme
        stringBuilder.append(true);
        //BunlarÄ±n yanÄ±nda long, float veriler de eklenir.

        //Zincirleme kullanÄ±m
        stringBuilder.append("Hello").append("Java");
        //stringBuilder nesnesini ekrana yazdÄ±rmak iÃ§in toString kullanÄ±rÄ±z.
        System.out.println(stringBuilder.toString());
    }

    public static void appendCodePoint() {
        StringBuilder stringBuilder = new StringBuilder();
        //appendCodePoint metodu StringBuilder nesnesine Unicode kod noktasÄ±nÄ± eklemek iÃ§in kullanÄ±lÄ±r.
        stringBuilder.appendCodePoint(0x1F603);

        //Ã‡Ä±ktÄ± 'ğŸ˜ƒ' bu olacaktÄ±r.
        System.out.println(stringBuilder.toString());
    }

    public static class MyStringBuilderDeleteThread implements Runnable {
        //delete metodu StringBuilder nesnesinin iÃ§indeki verileri siler.
        @Override
        public void run() {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Yunus ").append("Emre").append(" Ã‡iftÃ§i");
            System.out.println(stringBuilder.toString());
            try {
                Thread.sleep(2000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            //parametre olarak verilen 1.int deÄŸer silinecek deÄŸerin hangi indeks'ten baÅŸlayacaÄŸÄ±nÄ± bildirmek.
            //parametre olarak verilen 2.int deÄŸer silinecek deÄŸerin hangi indekste biteceÄŸini bildirir.
            stringBuilder.delete(0, stringBuilder.length());
            System.out.println("\nstringBuilder'Ä±n iÃ§i silindi. " + stringBuilder.toString());
        }

        public void delete() {
            MyStringBuilderDeleteThread myStringBuilderDeleteThread = new MyStringBuilderDeleteThread();
            Thread thread = new Thread(myStringBuilderDeleteThread);
            thread.start();
        }
    }

    public static void deleteCharAt() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Yunus ").append("Emre").append("Ã‡iftÃ§i").append("learning").append("JAVA");
        System.out.println("TÃ¼m elemanlar: " + stringBuilder.toString());
        //deleteCharAt metodu int indeks no verip o indeksteki karakteri siler.
        stringBuilder.deleteCharAt(0);
        System.out.println("GÃ¼ncel TÃ¼m Elemanlar: " + stringBuilder.toString());
    }

    public static void replace() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Yunus").append("Emre");
        //replace mevcut StringBuilder nesnesine yeni string eklemek iÃ§in kullanÄ±lÄ±r.
        //1. parametre eklemeye hangi indeks'ten baÅŸlanacaÄŸÄ±nÄ± bildirir.
        //2. parametre eklemeyi hangi indeks'te bitireceÄŸini bildirir.
        //3. parametre eklenecek String ifadeyi iÃ§erir.
        stringBuilder.replace(stringBuilder.length(), stringBuilder.length(), " Ã‡iftÃ§i");
        System.out.println(stringBuilder.toString());
    }

    public static void insert() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Yunus").append("Ã‡iftÃ§i");
        //insert metodu mevcut string'e yeni yazÄ±m eklemek iÃ§in kullanÄ±lÄ±r.
        stringBuilder.insert(5," Emre ");
        System.out.println(stringBuilder.toString());
    }
}
